export default {
	TARGET: {
		INDIVIDUAL: "individual",
		HOUSEHOLD: "household",
		COMMUNITY: "community",
		INSTITUTION: "institution",
	},
	TYPE: {
		ACTIVITY: "activity",
		DISTRIBUTION: "distribution",
	},
	COMPONENT: {
		SELECTION_CRITERIA: "selectionCriteria",
		DISTRIBUTED_COMMODITY: "distributedCommodity",
		COMMUNITIES: "communities",
		INSTITUTIONS: "institutions",
		ACTIVITY_DESCRIPTION: "activityDescription",
		HOUSEHOLD_TARGETED: "householdsTargeted",
		INDIVIDUALS_TARGETED: "individualsTargeted",
	},
	DIVISION_NWS_QUANTITIES: [
		{
			rangeFrom: 1,
			rangeTo: 3,
			value: null,
		},
		{
			rangeFrom: 4,
			rangeTo: 5,
			value: null,
		},
		{
			rangeFrom: 6,
			rangeTo: 8,
			value: null,
		},
		{
			rangeFrom: 9,
			rangeTo: null,
			value: null,
		},
	],
	DIVISION_NES_QUANTITIES: [
		{
			rangeFrom: 1,
			rangeTo: 3,
			value: null,
		},
		{
			rangeFrom: 4,
			rangeTo: 8,
			value: null,
		},
		{
			rangeFrom: 9,
			rangeTo: null,
			value: null,
		},
	],
	COMMODITY: {
		CASH: "Cash",
		MOBILE_MONEY: "Mobile Money",
		SMARTCARD: "Smartcard",
		FOOD_RATIONS: "Food Rations",
		READY_TO_EAT_RATIONS: "Ready to Eat Rations",
		BREAD: "Bread",
		AGRICULTURAL_KIT: "Agricultural Kit",
		WASH_KIT: "WASH Kit",
		SHELTER_TOOL_KIT: "Shelter tool kit",
		HYGIENE_KIT: "Hygiene kit",
		DIGNITY_KIT: "Dignity kit",
		NFI_KIT: "NFI Kit",
		WINTERIZATION_KIT: "Winterization Kit",
		ACTIVITY_ITEM: "Activity item",
		LOAN: "Loan",
		BUSINESS_GRANT: "Business Grant",
		QR_CODE_VOUCHER: "QR Code Voucher",
		PAPER_VOUCHER: "Paper Voucher",
		CASHBACK: "Cashback",
		DISTRIBUTION: {
			PER_HOUSEHOLD: "Per Household",
			PER_MEMBER_CODE: "Per Household Member",
			PER_MEMBER_LABEL: "Per Member (uniformly)",
			PER_MEMBERS_CODE: "Per Household Members",
			PER_MEMBERS_NWS_CODE: "Per Members NWS",
			PER_MEMBERS_NES_CODE: "Per Members NES",
			PER_MEMBERS_NWS_LABEL: "Per Members NWS (1-3, 4-5, 6-8, 9+)",
			PER_MEMBERS_NES_LABEL: "Per Members NES (1-3, 4-8, 9+)",
		},
	},
	FIELD_TYPE: {
		GENDER: "gender",
		DATE: "date",
		RESIDENCY_STATUS: "residencyStatus",
		BOOLEAN: "boolean",
		LIVELIHOOD: "livelihood",
		DOUBLE: "double",
		INTEGER: "integer",
		LOCATION: "location",
		LOCATION_TYPE: "locationType",
		STRING: "string",
	},
	ROUNDS_OPTIONS: [{ code: null, value: "N/A" }]
		.concat(
			Array.from(Array(100).keys()).slice(1, 100).map((num) => ({ code: num, value: num })),
		),
	INPUT_DISTRIBUTED: {
		IDS_LIST_MAX_LENGTH: 5000,
		DEFAULT_FORM_MODEL: {
			idType: null,
			idsList: "",
			justification: "",
		},
	},
};
